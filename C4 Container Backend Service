@startuml
' C4-PlantUML (Component)
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title C4: Component — Backend (Core Services)
caption Внутренний контур, защита ПДн (152-ФЗ), локализация данных в РФ, SLA ≥99.95%

LAYOUT_LEFT_RIGHT()

Container_Boundary(backend, "Backend (Core Services) — Java / Spring Boot") {

  ' --- Внешняя точка входа
  Component(api_gateway, "API Gateway", "Spring Cloud Gateway", "Единая точка входа: маршрутизация, rate limiting, circuit breaker, JWT валидация, мониторинг.")
  Component(auth_service, "Auth & Session Service", "Spring Security / OIDC/SAML", "Интеграция с корпоративным SSO/AD, MFA, короткоживущие токены, минимизация ПДн.")

  ' --- Доменные сервисы
  Component(query_service, "Query Orchestration Service", "Java", "Оркестрация пользовательских запросов, применение политик доступа, вызовы Retrieval/LLM.")
  Component(profile_service, "User & Avatar Profile Service", "Java", "Управление профилями пользователей и аватаров; хранение ПДн в РФ, маскирование, шифрование в БД.")
  Component(rag_service, "Context Retrieval Service", "Java", "RAG: поиск знаний в Vector DB и OpenSearch, агрегация контекста.")
  Component(feedback_service, "Feedback Service", "Java", "Сбор обратной связи и оценок, хранение без ПДн или с токенизацией.")

  ' --- Защита ПДн и комплаенс
  Component(consent_service, "Consent & Legal Basis Service", "Java", "Учёт согласий, целей и сроков обработки ПДн; запрет обработки при отзыве согласия.")
  Component(pdp, "Policy Decision Point (PDP)", "Java Policy Engine", "RBAC/ABAC, классификация данных, выдача решений по политикам доступа.")
  Component(pep, "Policy Enforcement Point (PEP)", "Java", "Применение политик: маскирование, фильтрация, контроль состава ПДн.")
  Component(token_service, "Tokenization / Depersonalization", "Java", "Токенизация/псевдонимизация данных, реидентификация по строго регламентированным ролям.")
  Component(local_guard, "Data Localization Guard", "Java", "Контроль локализации хранения ПДн в РФ и маршрутизации запросов.")
  Component(retention, "Retention & Erasure Service", "Java + Scheduler", "Контроль сроков хранения ПДн, удаление/блокирование по целям обработки.")

  ' --- Надёжность и наблюдаемость
  Component(health, "Health & Resilience Service", "Spring Boot Actuator", "Мониторинг состояния, retries, circuit breakers, blue-green/rolling deployment, autoscaling.")
  Component(audit, "Audit & Compliance Service", "Java", "Неизменяемый аудит обращений к ПДн и системным данным, хранение по корпоративной политике.")
}

' --- Интеграции и хранилища
ComponentDb(pg, "PostgreSQL (RU DC)", "Cluster", "Основное хранилище данных; локализовано в РФ; репликация, failover, PITR, шифрование на уровне СУБД.")
ComponentDb(redis, "Redis Cluster", "Cache", "Кеш сессий и ответов без открытых ПДн; Sentinel/Cluster для высокой доступности.")
ComponentDb(os, "OpenSearch", "Search", "Индексация и поиск по документам без хранения ПДн.")
Component_Ext(pango, "Pangoline Vector DB", "Vectors", "Векторный ретрив без ПДн (только контекст).")
ComponentQueue(broker, "Kafka / RabbitMQ", "Async", "Очереди, фоновые задачи, асинхронные события.")
Component_Ext(sso, "SSO / AD", "OIDC/SAML + LDAP", "Аутентификация, группы и роли сотрудников.")
Component_Ext(mon, "Monitoring / Logging", "Prometheus / Grafana / Loki", "Метрики, логи, трассировки, аудит без ПДн.")

' --- Внутренние связи
Rel(api_gateway, auth_service, "Аутентификация и валидация токенов", "HTTPS / OIDC/SAML")
Rel(api_gateway, pep, "Все запросы проходят через PEP", "HTTPS / REST")
Rel(pep, pdp, "Запрос решения по политике", "HTTPS / REST")
Rel(pep, query_service, "Допущенные запросы", "HTTPS / REST")

Rel(query_service, consent_service, "Проверка согласий субъекта", "HTTPS / REST")
Rel(query_service, token_service, "Токенизация входных/выходных данных", "HTTPS / REST")
Rel(query_service, rag_service, "Получение контекста знаний", "HTTPS / REST")
Rel(query_service, profile_service, "Работа с профилями пользователей", "HTTPS / REST")
Rel(query_service, feedback_service, "Передача обратной связи", "HTTPS / REST")

Rel(rag_service, pango, "Vector search (обезличенные данные)", "HTTPS / gRPC")
Rel(rag_service, os, "Full-text search (обезличенные данные)", "HTTPS / REST")

Rel(profile_service, pg, "Хранение профилей и ПДн", "JDBC / TLS")
Rel(consent_service, pg, "Хранение согласий и сроков", "JDBC / TLS")
Rel(token_service, pg, "Хранение токен-маппингов", "JDBC / TLS")
Rel(audit, pg, "Хранение журналов аудита", "JDBC / TLS")

Rel(backend, redis, "Кеширование данных без ПДн", "TCP / RESP")
Rel(backend, broker, "Асинхронные события и очереди", "AMQP / Kafka")

Rel(audit, mon, "Метрики и логи без ПДн (masking)", "HTTPS / OTLP")
Rel(health, mon, "Метрики SLA и доступности", "HTTPS / OTLP")

Rel(auth_service, sso, "Интеграция SSO / AD", "OIDC / SAML / LDAP")

' --- Ключевые комментарии
' 1) ПДн хранятся и обрабатываются только в РФ (локализация PostgreSQL / OpenSearch / Vector DB).
' 2) Защита: TLS 1.3, RBAC/ABAC, токенизация, маскирование данных, аудит доступа.
' 3) Согласия: обязательная проверка перед обработкой данных субъекта.
' 4) SLA ≥99.95%: отказоустойчивость, кластеризация, autoscaling, circuit breaker, retry.
' 5) Аудит: хранение неизменяемых записей, доступ только по ролям безопасности.

SHOW_LEGEND()
@enduml

